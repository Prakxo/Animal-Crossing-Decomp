.include "macros.inc"

.section .text

.org 0x80095738

.global GXSetMisc
GXSetMisc:
/* 80095738 00092698  2C 03 00 01 */	cmpwi r3, 1
/* 8009573C 0009269C  41 82 00 14 */	beq lbl_80095750
/* 80095740 000926A0  4D 80 00 20 */	bltlr 
/* 80095744 000926A4  2C 03 00 03 */	cmpwi r3, 3
/* 80095748 000926A8  4C 80 00 20 */	bgelr 
/* 8009574C 000926AC  48 00 00 4C */	b lbl_80095798
lbl_80095750:
/* 80095750 000926B0  80 6D 86 78 */	lwz r3, gx-_SDA_BASE_(r13)
/* 80095754 000926B4  38 00 00 01 */	li r0, 1
/* 80095758 000926B8  B0 83 00 04 */	sth r4, 4(r3)
/* 8009575C 000926BC  80 8D 86 78 */	lwz r4, gx-_SDA_BASE_(r13)
/* 80095760 000926C0  A0 64 00 04 */	lhz r3, 4(r4)
/* 80095764 000926C4  7C 63 00 34 */	cntlzw r3, r3
/* 80095768 000926C8  54 63 DC 3E */	rlwinm r3, r3, 0x1b, 0x10, 0x1f
/* 8009576C 000926CC  B0 64 00 00 */	sth r3, 0(r4)
/* 80095770 000926D0  80 6D 86 78 */	lwz r3, gx-_SDA_BASE_(r13)
/* 80095774 000926D4  B0 03 00 02 */	sth r0, 2(r3)
/* 80095778 000926D8  80 6D 86 78 */	lwz r3, gx-_SDA_BASE_(r13)
/* 8009577C 000926DC  A0 03 00 04 */	lhz r0, 4(r3)
/* 80095780 000926E0  28 00 00 00 */	cmplwi r0, 0
/* 80095784 000926E4  4D 82 00 20 */	beqlr 
/* 80095788 000926E8  80 03 04 F4 */	lwz r0, 0x4f4(r3)
/* 8009578C 000926EC  60 00 00 08 */	ori r0, r0, 8
/* 80095790 000926F0  90 03 04 F4 */	stw r0, 0x4f4(r3)
/* 80095794 000926F4  4E 80 00 20 */	blr 
lbl_80095798:
/* 80095798 000926F8  7C 84 00 D0 */	neg r4, r4
/* 8009579C 000926FC  80 6D 86 78 */	lwz r3, gx-_SDA_BASE_(r13)
/* 800957A0 00092700  30 04 FF FF */	addic r0, r4, -1
/* 800957A4 00092704  7C 00 21 10 */	subfe r0, r0, r4
/* 800957A8 00092708  98 03 04 F1 */	stb r0, 0x4f1(r3)
/* 800957AC 0009270C  4E 80 00 20 */	blr 

.global GXFlush
GXFlush:
/* 800957B0 00092710  7C 08 02 A6 */	mflr r0
/* 800957B4 00092714  90 01 00 04 */	stw r0, 4(r1)
/* 800957B8 00092718  94 21 FF F8 */	stwu r1, -8(r1)
/* 800957BC 0009271C  80 6D 86 78 */	lwz r3, gx-_SDA_BASE_(r13)
/* 800957C0 00092720  80 03 04 F4 */	lwz r0, 0x4f4(r3)
/* 800957C4 00092724  28 00 00 00 */	cmplwi r0, 0
/* 800957C8 00092728  41 82 00 08 */	beq lbl_800957D0
/* 800957CC 0009272C  48 00 05 59 */	bl __GXSetDirtyState
lbl_800957D0:
/* 800957D0 00092730  38 00 00 00 */	li r0, 0
/* 800957D4 00092734  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800957D8 00092738  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800957DC 0009273C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957E0 00092740  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957E4 00092744  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957E8 00092748  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957EC 0009274C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957F0 00092750  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957F4 00092754  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800957F8 00092758  4B FE 2E BD */	bl PPCSync
/* 800957FC 0009275C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 80095800 00092760  38 21 00 08 */	addi r1, r1, 8
/* 80095804 00092764  7C 08 03 A6 */	mtlr r0
/* 80095808 00092768  4E 80 00 20 */	blr 

.global GXAbortFrame
GXAbortFrame:
/* 8009580C 0009276C  7C 08 02 A6 */	mflr r0
/* 80095810 00092770  90 01 00 04 */	stw r0, 4(r1)
/* 80095814 00092774  38 00 00 01 */	li r0, 1
/* 80095818 00092778  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 8009581C 0009277C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80095820 00092780  93 C1 00 10 */	stw r30, 0x10(r1)
/* 80095824 00092784  93 A1 00 0C */	stw r29, 0xc(r1)
/* 80095828 00092788  93 81 00 08 */	stw r28, 8(r1)
/* 8009582C 0009278C  80 6D 8F D0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 80095830 00092790  90 03 00 18 */	stw r0, 0x18(r3)
/* 80095834 00092794  4B FE 9E C5 */	bl OSGetTime
/* 80095838 00092798  38 00 00 00 */	li r0, 0
/* 8009583C 0009279C  3B E4 00 00 */	addi r31, r4, 0
/* 80095840 000927A0  3B C3 00 00 */	addi r30, r3, 0
/* 80095844 000927A4  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 80095848 000927A8  3B A0 00 32 */	li r29, 0x32
lbl_8009584C:
/* 8009584C 000927AC  4B FE 9E AD */	bl OSGetTime
/* 80095850 000927B0  7C 9F 20 10 */	subfc r4, r31, r4
/* 80095854 000927B4  7C 1E 19 10 */	subfe r0, r30, r3
/* 80095858 000927B8  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 8009585C 000927BC  7C 04 E8 10 */	subfc r0, r4, r29
/* 80095860 000927C0  7C 63 E1 10 */	subfe r3, r3, r28
/* 80095864 000927C4  7C 7C E1 10 */	subfe r3, r28, r28
/* 80095868 000927C8  7C 63 00 D1 */	neg. r3, r3
/* 8009586C 000927CC  41 82 FF E0 */	beq lbl_8009584C
/* 80095870 000927D0  80 6D 8F D0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 80095874 000927D4  3B C0 00 00 */	li r30, 0
/* 80095878 000927D8  93 C3 00 18 */	stw r30, 0x18(r3)
/* 8009587C 000927DC  4B FE 9E 7D */	bl OSGetTime
/* 80095880 000927E0  3B 84 00 00 */	addi r28, r4, 0
/* 80095884 000927E4  3B A3 00 00 */	addi r29, r3, 0
/* 80095888 000927E8  6F DF 80 00 */	xoris r31, r30, 0x8000
/* 8009588C 000927EC  3B C0 00 05 */	li r30, 5
lbl_80095890:
/* 80095890 000927F0  4B FE 9E 69 */	bl OSGetTime
/* 80095894 000927F4  7C 9C 20 10 */	subfc r4, r28, r4
/* 80095898 000927F8  7C 1D 19 10 */	subfe r0, r29, r3
/* 8009589C 000927FC  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800958A0 00092800  7C 04 F0 10 */	subfc r0, r4, r30
/* 800958A4 00092804  7C 63 F9 10 */	subfe r3, r3, r31
/* 800958A8 00092808  7C 7F F9 10 */	subfe r3, r31, r31
/* 800958AC 0009280C  7C 63 00 D1 */	neg. r3, r3
/* 800958B0 00092810  41 82 FF E0 */	beq lbl_80095890
/* 800958B4 00092814  4B FF EE FD */	bl __GXCleanGPFifo
/* 800958B8 00092818  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800958BC 0009281C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800958C0 00092820  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800958C4 00092824  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 800958C8 00092828  83 81 00 08 */	lwz r28, 8(r1)
/* 800958CC 0009282C  38 21 00 18 */	addi r1, r1, 0x18
/* 800958D0 00092830  7C 08 03 A6 */	mtlr r0
/* 800958D4 00092834  4E 80 00 20 */	blr 

.global GXSetDrawDone
GXSetDrawDone:
/* 800958D8 00092838  7C 08 02 A6 */	mflr r0
/* 800958DC 0009283C  90 01 00 04 */	stw r0, 4(r1)
/* 800958E0 00092840  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800958E4 00092844  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800958E8 00092848  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800958EC 0009284C  4B FE 53 39 */	bl OSDisableInterrupts
/* 800958F0 00092850  38 00 00 61 */	li r0, 0x61
/* 800958F4 00092854  80 8D 86 78 */	lwz r4, gx-_SDA_BASE_(r13)
/* 800958F8 00092858  3C C0 CC 01 */	lis r6, 0xCC008000@ha
/* 800958FC 0009285C  3C A0 45 00 */	lis r5, 0x45000002@ha
/* 80095900 00092860  98 06 80 00 */	stb r0, 0xCC008000@l(r6)
/* 80095904 00092864  38 05 00 02 */	addi r0, r5, 0x45000002@l
/* 80095908 00092868  90 06 80 00 */	stw r0, -0x8000(r6)
/* 8009590C 0009286C  7C 7E 1B 78 */	mr r30, r3
/* 80095910 00092870  80 04 04 F4 */	lwz r0, 0x4f4(r4)
/* 80095914 00092874  28 00 00 00 */	cmplwi r0, 0
/* 80095918 00092878  41 82 00 08 */	beq lbl_80095920
/* 8009591C 0009287C  48 00 04 09 */	bl __GXSetDirtyState
lbl_80095920:
/* 80095920 00092880  3B E0 00 00 */	li r31, 0
/* 80095924 00092884  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 80095928 00092888  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 8009592C 0009288C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095930 00092890  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095934 00092894  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095938 00092898  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 8009593C 0009289C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095940 000928A0  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095944 000928A4  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 80095948 000928A8  4B FE 2D 6D */	bl PPCSync
/* 8009594C 000928AC  9B ED 90 08 */	stb r31, lbl_80218B88-_SDA_BASE_(r13)
/* 80095950 000928B0  7F C3 F3 78 */	mr r3, r30
/* 80095954 000928B4  4B FE 52 F9 */	bl OSRestoreInterrupts
/* 80095958 000928B8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 8009595C 000928BC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80095960 000928C0  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 80095964 000928C4  38 21 00 18 */	addi r1, r1, 0x18
/* 80095968 000928C8  7C 08 03 A6 */	mtlr r0
/* 8009596C 000928CC  4E 80 00 20 */	blr 

.global GXDrawDone
GXDrawDone:
/* 80095970 000928D0  7C 08 02 A6 */	mflr r0
/* 80095974 000928D4  90 01 00 04 */	stw r0, 4(r1)
/* 80095978 000928D8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 8009597C 000928DC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80095980 000928E0  4B FE 52 A5 */	bl OSDisableInterrupts
/* 80095984 000928E4  38 00 00 61 */	li r0, 0x61
/* 80095988 000928E8  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 8009598C 000928EC  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 80095990 000928F0  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 80095994 000928F4  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 80095998 000928F8  90 05 80 00 */	stw r0, -0x8000(r5)
/* 8009599C 000928FC  7C 7F 1B 78 */	mr r31, r3
/* 800959A0 00092900  4B FF FE 11 */	bl GXFlush
/* 800959A4 00092904  38 00 00 00 */	li r0, 0
/* 800959A8 00092908  98 0D 90 08 */	stb r0, lbl_80218B88-_SDA_BASE_(r13)
/* 800959AC 0009290C  7F E3 FB 78 */	mr r3, r31
/* 800959B0 00092910  4B FE 52 9D */	bl OSRestoreInterrupts
/* 800959B4 00092914  4B FE 52 71 */	bl OSDisableInterrupts
/* 800959B8 00092918  7C 7F 1B 78 */	mr r31, r3
/* 800959BC 0009291C  48 00 00 0C */	b lbl_800959C8
lbl_800959C0:
/* 800959C0 00092920  38 6D 90 0C */	addi r3, r13, FinishQueue-_SDA_BASE_
/* 800959C4 00092924  4B FE 92 91 */	bl OSSleepThread
lbl_800959C8:
/* 800959C8 00092928  88 0D 90 08 */	lbz r0, lbl_80218B88-_SDA_BASE_(r13)
/* 800959CC 0009292C  28 00 00 00 */	cmplwi r0, 0
/* 800959D0 00092930  41 82 FF F0 */	beq lbl_800959C0
/* 800959D4 00092934  7F E3 FB 78 */	mr r3, r31
/* 800959D8 00092938  4B FE 52 75 */	bl OSRestoreInterrupts
/* 800959DC 0009293C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800959E0 00092940  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800959E4 00092944  38 21 00 18 */	addi r1, r1, 0x18
/* 800959E8 00092948  7C 08 03 A6 */	mtlr r0
/* 800959EC 0009294C  4E 80 00 20 */	blr 

.global GXPixModeSync
GXPixModeSync:
/* 800959F0 00092950  38 00 00 61 */	li r0, 0x61
/* 800959F4 00092954  80 8D 86 78 */	lwz r4, gx-_SDA_BASE_(r13)
/* 800959F8 00092958  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800959FC 0009295C  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 80095A00 00092960  38 00 00 00 */	li r0, 0
/* 80095A04 00092964  80 64 01 DC */	lwz r3, 0x1dc(r4)
/* 80095A08 00092968  90 65 80 00 */	stw r3, -0x8000(r5)
/* 80095A0C 0009296C  B0 04 00 02 */	sth r0, 2(r4)
/* 80095A10 00092970  4E 80 00 20 */	blr 

.global GXPokeAlphaMode
GXPokeAlphaMode:
/* 80095A14 00092974  80 AD 8F D8 */	lwz r5, __peReg-_SDA_BASE_(r13)
/* 80095A18 00092978  54 80 06 3E */	clrlwi r0, r4, 0x18
/* 80095A1C 0009297C  50 60 40 2E */	rlwimi r0, r3, 8, 0, 0x17
/* 80095A20 00092980  B0 05 00 06 */	sth r0, 6(r5)
/* 80095A24 00092984  4E 80 00 20 */	blr 

.global GXPokeAlphaRead
GXPokeAlphaRead:
/* 80095A28 00092988  54 60 07 B8 */	rlwinm r0, r3, 0, 0x1e, 0x1c
/* 80095A2C 0009298C  80 6D 8F D8 */	lwz r3, __peReg-_SDA_BASE_(r13)
/* 80095A30 00092990  60 00 00 04 */	ori r0, r0, 4
/* 80095A34 00092994  B0 03 00 08 */	sth r0, 8(r3)
/* 80095A38 00092998  4E 80 00 20 */	blr 

.global GXPokeAlphaUpdate
GXPokeAlphaUpdate:
/* 80095A3C 0009299C  80 8D 8F D8 */	lwz r4, __peReg-_SDA_BASE_(r13)
/* 80095A40 000929A0  54 60 25 36 */	rlwinm r0, r3, 4, 0x14, 0x1b
/* 80095A44 000929A4  A4 64 00 02 */	lhzu r3, 2(r4)
/* 80095A48 000929A8  54 63 07 34 */	rlwinm r3, r3, 0, 0x1c, 0x1a
/* 80095A4C 000929AC  7C 60 03 78 */	or r0, r3, r0
/* 80095A50 000929B0  B0 04 00 00 */	sth r0, 0(r4)
/* 80095A54 000929B4  4E 80 00 20 */	blr 

.global GXPokeBlendMode
GXPokeBlendMode:
/* 80095A58 000929B8  80 ED 8F D8 */	lwz r7, __peReg-_SDA_BASE_(r13)
/* 80095A5C 000929BC  2C 03 00 01 */	cmpwi r3, 1
/* 80095A60 000929C0  39 20 00 01 */	li r9, 1
/* 80095A64 000929C4  39 47 00 02 */	addi r10, r7, 2
/* 80095A68 000929C8  A0 E7 00 02 */	lhz r7, 2(r7)
/* 80095A6C 000929CC  41 82 00 10 */	beq lbl_80095A7C
/* 80095A70 000929D0  2C 03 00 03 */	cmpwi r3, 3
/* 80095A74 000929D4  41 82 00 08 */	beq lbl_80095A7C
/* 80095A78 000929D8  39 20 00 00 */	li r9, 0
lbl_80095A7C:
/* 80095A7C 000929DC  54 E8 00 3C */	rlwinm r8, r7, 0, 0, 0x1e
/* 80095A80 000929E0  20 03 00 03 */	subfic r0, r3, 3
/* 80095A84 000929E4  7C 07 00 34 */	cntlzw r7, r0
/* 80095A88 000929E8  20 03 00 02 */	subfic r0, r3, 2
/* 80095A8C 000929EC  7D 08 4B 78 */	or r8, r8, r9
/* 80095A90 000929F0  7C 00 00 34 */	cntlzw r0, r0
/* 80095A94 000929F4  55 08 05 66 */	rlwinm r8, r8, 0, 0x15, 0x13
/* 80095A98 000929F8  54 E3 30 28 */	rlwinm r3, r7, 6, 0, 0x14
/* 80095A9C 000929FC  7D 03 1B 78 */	or r3, r8, r3
/* 80095AA0 00092A00  54 63 07 FA */	rlwinm r3, r3, 0, 0x1f, 0x1d
/* 80095AA4 00092A04  54 00 E1 3C */	rlwinm r0, r0, 0x1c, 4, 0x1e
/* 80095AA8 00092A08  7C 60 03 78 */	or r0, r3, r0
/* 80095AAC 00092A0C  54 03 05 1E */	rlwinm r3, r0, 0, 0x14, 0xf
/* 80095AB0 00092A10  54 C0 60 26 */	slwi r0, r6, 0xc
/* 80095AB4 00092A14  7C 60 03 78 */	or r0, r3, r0
/* 80095AB8 00092A18  54 03 06 28 */	rlwinm r3, r0, 0, 0x18, 0x14
/* 80095ABC 00092A1C  54 80 40 2E */	slwi r0, r4, 8
/* 80095AC0 00092A20  7C 60 03 78 */	or r0, r3, r0
/* 80095AC4 00092A24  54 03 06 EE */	rlwinm r3, r0, 0, 0x1b, 0x17
/* 80095AC8 00092A28  54 A0 28 34 */	slwi r0, r5, 5
/* 80095ACC 00092A2C  7C 60 03 78 */	or r0, r3, r0
/* 80095AD0 00092A30  54 00 02 3E */	clrlwi r0, r0, 8
/* 80095AD4 00092A34  64 00 41 00 */	oris r0, r0, 0x4100
/* 80095AD8 00092A38  B0 0A 00 00 */	sth r0, 0(r10)
/* 80095ADC 00092A3C  4E 80 00 20 */	blr 

.global GXPokeColorUpdate
GXPokeColorUpdate:
/* 80095AE0 00092A40  80 8D 8F D8 */	lwz r4, __peReg-_SDA_BASE_(r13)
/* 80095AE4 00092A44  54 60 1D 78 */	rlwinm r0, r3, 3, 0x15, 0x1c
/* 80095AE8 00092A48  A4 64 00 02 */	lhzu r3, 2(r4)
/* 80095AEC 00092A4C  54 63 07 76 */	rlwinm r3, r3, 0, 0x1d, 0x1b
/* 80095AF0 00092A50  7C 60 03 78 */	or r0, r3, r0
/* 80095AF4 00092A54  B0 04 00 00 */	sth r0, 0(r4)
/* 80095AF8 00092A58  4E 80 00 20 */	blr 

.global GXPokeDstAlpha
GXPokeDstAlpha:
/* 80095AFC 00092A5C  80 AD 8F D8 */	lwz r5, __peReg-_SDA_BASE_(r13)
/* 80095B00 00092A60  54 60 44 2E */	rlwinm r0, r3, 8, 0x10, 0x17
/* 80095B04 00092A64  50 80 06 3E */	rlwimi r0, r4, 0, 0x18, 0x1f
/* 80095B08 00092A68  B0 05 00 04 */	sth r0, 4(r5)
/* 80095B0C 00092A6C  4E 80 00 20 */	blr 

.global GXPokeDither
GXPokeDither:
/* 80095B10 00092A70  80 8D 8F D8 */	lwz r4, __peReg-_SDA_BASE_(r13)
/* 80095B14 00092A74  54 60 15 BA */	rlwinm r0, r3, 2, 0x16, 0x1d
/* 80095B18 00092A78  A4 64 00 02 */	lhzu r3, 2(r4)
/* 80095B1C 00092A7C  54 63 07 B8 */	rlwinm r3, r3, 0, 0x1e, 0x1c
/* 80095B20 00092A80  7C 60 03 78 */	or r0, r3, r0
/* 80095B24 00092A84  B0 04 00 00 */	sth r0, 0(r4)
/* 80095B28 00092A88  4E 80 00 20 */	blr 

.global GXPokeZMode
GXPokeZMode:
/* 80095B2C 00092A8C  54 60 06 3E */	clrlwi r0, r3, 0x18
/* 80095B30 00092A90  80 6D 8F D8 */	lwz r3, __peReg-_SDA_BASE_(r13)
/* 80095B34 00092A94  54 06 07 F6 */	rlwinm r6, r0, 0, 0x1f, 0x1b
/* 80095B38 00092A98  54 80 08 3C */	slwi r0, r4, 1
/* 80095B3C 00092A9C  7C C0 03 78 */	or r0, r6, r0
/* 80095B40 00092AA0  54 04 07 34 */	rlwinm r4, r0, 0, 0x1c, 0x1a
/* 80095B44 00092AA4  54 A0 25 36 */	rlwinm r0, r5, 4, 0x14, 0x1b
/* 80095B48 00092AA8  7C 80 03 78 */	or r0, r4, r0
/* 80095B4C 00092AAC  B0 03 00 00 */	sth r0, 0(r3)
/* 80095B50 00092AB0  4E 80 00 20 */	blr 

.global GXTokenInterruptHandler
GXTokenInterruptHandler:
/* 80095B54 00092AB4  7C 08 02 A6 */	mflr r0
/* 80095B58 00092AB8  90 01 00 04 */	stw r0, 4(r1)
/* 80095B5C 00092ABC  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 80095B60 00092AC0  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 80095B64 00092AC4  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 80095B68 00092AC8  7C 9E 23 78 */	mr r30, r4
/* 80095B6C 00092ACC  80 0D 90 00 */	lwz r0, TokenCB-_SDA_BASE_(r13)
/* 80095B70 00092AD0  80 6D 8F D8 */	lwz r3, __peReg-_SDA_BASE_(r13)
/* 80095B74 00092AD4  28 00 00 00 */	cmplwi r0, 0
/* 80095B78 00092AD8  A3 E3 00 0E */	lhz r31, 0xe(r3)
/* 80095B7C 00092ADC  41 82 00 34 */	beq lbl_80095BB0
/* 80095B80 00092AE0  38 61 00 10 */	addi r3, r1, 0x10
/* 80095B84 00092AE4  4B FE 48 AD */	bl OSClearContext
/* 80095B88 00092AE8  38 61 00 10 */	addi r3, r1, 0x10
/* 80095B8C 00092AEC  4B FE 46 DD */	bl OSSetCurrentContext
/* 80095B90 00092AF0  81 8D 90 00 */	lwz r12, TokenCB-_SDA_BASE_(r13)
/* 80095B94 00092AF4  38 7F 00 00 */	addi r3, r31, 0
/* 80095B98 00092AF8  7D 88 03 A6 */	mtlr r12
/* 80095B9C 00092AFC  4E 80 00 21 */	blrl 
/* 80095BA0 00092B00  38 61 00 10 */	addi r3, r1, 0x10
/* 80095BA4 00092B04  4B FE 48 8D */	bl OSClearContext
/* 80095BA8 00092B08  7F C3 F3 78 */	mr r3, r30
/* 80095BAC 00092B0C  4B FE 46 BD */	bl OSSetCurrentContext
lbl_80095BB0:
/* 80095BB0 00092B10  80 6D 8F D8 */	lwz r3, __peReg-_SDA_BASE_(r13)
/* 80095BB4 00092B14  A4 03 00 0A */	lhzu r0, 0xa(r3)
/* 80095BB8 00092B18  54 00 07 B8 */	rlwinm r0, r0, 0, 0x1e, 0x1c
/* 80095BBC 00092B1C  60 00 00 04 */	ori r0, r0, 4
/* 80095BC0 00092B20  B0 03 00 00 */	sth r0, 0(r3)
/* 80095BC4 00092B24  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 80095BC8 00092B28  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 80095BCC 00092B2C  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 80095BD0 00092B30  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 80095BD4 00092B34  7C 08 03 A6 */	mtlr r0
/* 80095BD8 00092B38  4E 80 00 20 */	blr 

.global GXSetDrawDoneCallback
GXSetDrawDoneCallback:
/* 80095BDC 00092B3C  7C 08 02 A6 */	mflr r0
/* 80095BE0 00092B40  90 01 00 04 */	stw r0, 4(r1)
/* 80095BE4 00092B44  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 80095BE8 00092B48  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80095BEC 00092B4C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 80095BF0 00092B50  7C 7E 1B 78 */	mr r30, r3
/* 80095BF4 00092B54  83 ED 90 04 */	lwz r31, DrawDoneCB-_SDA_BASE_(r13)
/* 80095BF8 00092B58  4B FE 50 2D */	bl OSDisableInterrupts
/* 80095BFC 00092B5C  93 CD 90 04 */	stw r30, DrawDoneCB-_SDA_BASE_(r13)
/* 80095C00 00092B60  4B FE 50 4D */	bl OSRestoreInterrupts
/* 80095C04 00092B64  7F E3 FB 78 */	mr r3, r31
/* 80095C08 00092B68  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80095C0C 00092B6C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80095C10 00092B70  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 80095C14 00092B74  38 21 00 18 */	addi r1, r1, 0x18
/* 80095C18 00092B78  7C 08 03 A6 */	mtlr r0
/* 80095C1C 00092B7C  4E 80 00 20 */	blr 

.global GXFinishInterruptHandler
GXFinishInterruptHandler:
/* 80095C20 00092B80  7C 08 02 A6 */	mflr r0
/* 80095C24 00092B84  38 60 00 01 */	li r3, 1
/* 80095C28 00092B88  90 01 00 04 */	stw r0, 4(r1)
/* 80095C2C 00092B8C  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 80095C30 00092B90  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 80095C34 00092B94  3B E4 00 00 */	addi r31, r4, 0
/* 80095C38 00092B98  80 AD 8F D8 */	lwz r5, __peReg-_SDA_BASE_(r13)
/* 80095C3C 00092B9C  A0 05 00 0A */	lhz r0, 0xa(r5)
/* 80095C40 00092BA0  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 80095C44 00092BA4  60 00 00 08 */	ori r0, r0, 8
/* 80095C48 00092BA8  B0 05 00 0A */	sth r0, 0xa(r5)
/* 80095C4C 00092BAC  80 0D 90 04 */	lwz r0, DrawDoneCB-_SDA_BASE_(r13)
/* 80095C50 00092BB0  98 6D 90 08 */	stb r3, lbl_80218B88-_SDA_BASE_(r13)
/* 80095C54 00092BB4  28 00 00 00 */	cmplwi r0, 0
/* 80095C58 00092BB8  41 82 00 30 */	beq lbl_80095C88
/* 80095C5C 00092BBC  38 61 00 10 */	addi r3, r1, 0x10
/* 80095C60 00092BC0  4B FE 47 D1 */	bl OSClearContext
/* 80095C64 00092BC4  38 61 00 10 */	addi r3, r1, 0x10
/* 80095C68 00092BC8  4B FE 46 01 */	bl OSSetCurrentContext
/* 80095C6C 00092BCC  81 8D 90 04 */	lwz r12, DrawDoneCB-_SDA_BASE_(r13)
/* 80095C70 00092BD0  7D 88 03 A6 */	mtlr r12
/* 80095C74 00092BD4  4E 80 00 21 */	blrl 
/* 80095C78 00092BD8  38 61 00 10 */	addi r3, r1, 0x10
/* 80095C7C 00092BDC  4B FE 47 B5 */	bl OSClearContext
/* 80095C80 00092BE0  7F E3 FB 78 */	mr r3, r31
/* 80095C84 00092BE4  4B FE 45 E5 */	bl OSSetCurrentContext
lbl_80095C88:
/* 80095C88 00092BE8  38 6D 90 0C */	addi r3, r13, FinishQueue-_SDA_BASE_
/* 80095C8C 00092BEC  4B FE 90 B5 */	bl OSWakeupThread
/* 80095C90 00092BF0  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 80095C94 00092BF4  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 80095C98 00092BF8  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 80095C9C 00092BFC  7C 08 03 A6 */	mtlr r0
/* 80095CA0 00092C00  4E 80 00 20 */	blr 

.global __GXPEInit
__GXPEInit:
/* 80095CA4 00092C04  7C 08 02 A6 */	mflr r0
/* 80095CA8 00092C08  3C 60 80 09 */	lis r3, GXTokenInterruptHandler@ha
/* 80095CAC 00092C0C  90 01 00 04 */	stw r0, 4(r1)
/* 80095CB0 00092C10  38 83 5B 54 */	addi r4, r3, GXTokenInterruptHandler@l
/* 80095CB4 00092C14  38 60 00 12 */	li r3, 0x12
/* 80095CB8 00092C18  94 21 FF F8 */	stwu r1, -8(r1)
/* 80095CBC 00092C1C  4B FE 4F B5 */	bl __OSSetInterruptHandler
/* 80095CC0 00092C20  3C 60 80 09 */	lis r3, GXFinishInterruptHandler@ha
/* 80095CC4 00092C24  38 83 5C 20 */	addi r4, r3, GXFinishInterruptHandler@l
/* 80095CC8 00092C28  38 60 00 13 */	li r3, 0x13
/* 80095CCC 00092C2C  4B FE 4F A5 */	bl __OSSetInterruptHandler
/* 80095CD0 00092C30  38 6D 90 0C */	addi r3, r13, FinishQueue-_SDA_BASE_
/* 80095CD4 00092C34  4B FE 7F F9 */	bl OSInitThreadQueue
/* 80095CD8 00092C38  38 60 20 00 */	li r3, 0x2000
/* 80095CDC 00092C3C  4B FE 53 99 */	bl __OSUnmaskInterrupts
/* 80095CE0 00092C40  38 60 10 00 */	li r3, 0x1000
/* 80095CE4 00092C44  4B FE 53 91 */	bl __OSUnmaskInterrupts
/* 80095CE8 00092C48  80 6D 8F D8 */	lwz r3, __peReg-_SDA_BASE_(r13)
/* 80095CEC 00092C4C  A4 03 00 0A */	lhzu r0, 0xa(r3)
/* 80095CF0 00092C50  54 00 07 B8 */	rlwinm r0, r0, 0, 0x1e, 0x1c
/* 80095CF4 00092C54  60 00 00 04 */	ori r0, r0, 4
/* 80095CF8 00092C58  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 80095CFC 00092C5C  60 00 00 08 */	ori r0, r0, 8
/* 80095D00 00092C60  54 00 00 3C */	rlwinm r0, r0, 0, 0, 0x1e
/* 80095D04 00092C64  60 00 00 01 */	ori r0, r0, 1
/* 80095D08 00092C68  54 00 07 FA */	rlwinm r0, r0, 0, 0x1f, 0x1d
/* 80095D0C 00092C6C  60 00 00 02 */	ori r0, r0, 2
/* 80095D10 00092C70  B0 03 00 00 */	sth r0, 0(r3)
/* 80095D14 00092C74  80 01 00 0C */	lwz r0, 0xc(r1)
/* 80095D18 00092C78  38 21 00 08 */	addi r1, r1, 8
/* 80095D1C 00092C7C  7C 08 03 A6 */	mtlr r0
/* 80095D20 00092C80  4E 80 00 20 */	blr 
