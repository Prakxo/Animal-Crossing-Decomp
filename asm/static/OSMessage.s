.include "macros.inc"

.section .text

.org 0x8007BC20

.global OSInitMessageQueue
OSInitMessageQueue:
/* 8007BC20 00078B80  7C 08 02 A6 */	mflr r0
/* 8007BC24 00078B84  90 01 00 04 */	stw r0, 4(r1)
/* 8007BC28 00078B88  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 8007BC2C 00078B8C  93 E1 00 24 */	stw r31, 0x24(r1)
/* 8007BC30 00078B90  3B E5 00 00 */	addi r31, r5, 0
/* 8007BC34 00078B94  93 C1 00 20 */	stw r30, 0x20(r1)
/* 8007BC38 00078B98  3B C4 00 00 */	addi r30, r4, 0
/* 8007BC3C 00078B9C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 8007BC40 00078BA0  3B A3 00 00 */	addi r29, r3, 0
/* 8007BC44 00078BA4  48 00 20 89 */	bl OSInitThreadQueue
/* 8007BC48 00078BA8  38 7D 00 08 */	addi r3, r29, 8
/* 8007BC4C 00078BAC  48 00 20 81 */	bl OSInitThreadQueue
/* 8007BC50 00078BB0  93 DD 00 10 */	stw r30, 0x10(r29)
/* 8007BC54 00078BB4  38 00 00 00 */	li r0, 0
/* 8007BC58 00078BB8  93 FD 00 14 */	stw r31, 0x14(r29)
/* 8007BC5C 00078BBC  90 1D 00 18 */	stw r0, 0x18(r29)
/* 8007BC60 00078BC0  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 8007BC64 00078BC4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 8007BC68 00078BC8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 8007BC6C 00078BCC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 8007BC70 00078BD0  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 8007BC74 00078BD4  38 21 00 28 */	addi r1, r1, 0x28
/* 8007BC78 00078BD8  7C 08 03 A6 */	mtlr r0
/* 8007BC7C 00078BDC  4E 80 00 20 */	blr 

.global OSSendMessage
OSSendMessage:
/* 8007BC80 00078BE0  7C 08 02 A6 */	mflr r0
/* 8007BC84 00078BE4  90 01 00 04 */	stw r0, 4(r1)
/* 8007BC88 00078BE8  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 8007BC8C 00078BEC  93 E1 00 24 */	stw r31, 0x24(r1)
/* 8007BC90 00078BF0  3B E5 00 00 */	addi r31, r5, 0
/* 8007BC94 00078BF4  93 C1 00 20 */	stw r30, 0x20(r1)
/* 8007BC98 00078BF8  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 8007BC9C 00078BFC  3B A4 00 00 */	addi r29, r4, 0
/* 8007BCA0 00078C00  93 81 00 18 */	stw r28, 0x18(r1)
/* 8007BCA4 00078C04  3B 83 00 00 */	addi r28, r3, 0
/* 8007BCA8 00078C08  4B FF EF 7D */	bl OSDisableInterrupts
/* 8007BCAC 00078C0C  3B C3 00 00 */	addi r30, r3, 0
/* 8007BCB0 00078C10  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 8007BCB4 00078C14  48 00 00 24 */	b lbl_8007BCD8
lbl_8007BCB8:
/* 8007BCB8 00078C18  2C 1F 00 00 */	cmpwi r31, 0
/* 8007BCBC 00078C1C  40 82 00 14 */	bne lbl_8007BCD0
/* 8007BCC0 00078C20  7F C3 F3 78 */	mr r3, r30
/* 8007BCC4 00078C24  4B FF EF 89 */	bl OSRestoreInterrupts
/* 8007BCC8 00078C28  38 60 00 00 */	li r3, 0
/* 8007BCCC 00078C2C  48 00 00 5C */	b lbl_8007BD28
lbl_8007BCD0:
/* 8007BCD0 00078C30  7F 83 E3 78 */	mr r3, r28
/* 8007BCD4 00078C34  48 00 2F 81 */	bl OSSleepThread
lbl_8007BCD8:
/* 8007BCD8 00078C38  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 8007BCDC 00078C3C  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 8007BCE0 00078C40  7C 06 20 00 */	cmpw r6, r4
/* 8007BCE4 00078C44  40 81 FF D4 */	ble lbl_8007BCB8
/* 8007BCE8 00078C48  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 8007BCEC 00078C4C  38 7C 00 08 */	addi r3, r28, 8
/* 8007BCF0 00078C50  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 8007BCF4 00078C54  7C 80 22 14 */	add r4, r0, r4
/* 8007BCF8 00078C58  7C 04 33 D6 */	divw r0, r4, r6
/* 8007BCFC 00078C5C  7C 00 31 D6 */	mullw r0, r0, r6
/* 8007BD00 00078C60  7C 00 20 50 */	subf r0, r0, r4
/* 8007BD04 00078C64  54 00 10 3A */	slwi r0, r0, 2
/* 8007BD08 00078C68  7F A5 01 2E */	stwx r29, r5, r0
/* 8007BD0C 00078C6C  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 8007BD10 00078C70  38 04 00 01 */	addi r0, r4, 1
/* 8007BD14 00078C74  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 8007BD18 00078C78  48 00 30 29 */	bl OSWakeupThread
/* 8007BD1C 00078C7C  7F C3 F3 78 */	mr r3, r30
/* 8007BD20 00078C80  4B FF EF 2D */	bl OSRestoreInterrupts
/* 8007BD24 00078C84  38 60 00 01 */	li r3, 1
lbl_8007BD28:
/* 8007BD28 00078C88  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 8007BD2C 00078C8C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 8007BD30 00078C90  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 8007BD34 00078C94  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 8007BD38 00078C98  83 81 00 18 */	lwz r28, 0x18(r1)
/* 8007BD3C 00078C9C  38 21 00 28 */	addi r1, r1, 0x28
/* 8007BD40 00078CA0  7C 08 03 A6 */	mtlr r0
/* 8007BD44 00078CA4  4E 80 00 20 */	blr 

.global OSReceiveMessage
OSReceiveMessage:
/* 8007BD48 00078CA8  7C 08 02 A6 */	mflr r0
/* 8007BD4C 00078CAC  90 01 00 04 */	stw r0, 4(r1)
/* 8007BD50 00078CB0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 8007BD54 00078CB4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 8007BD58 00078CB8  3B E3 00 00 */	addi r31, r3, 0
/* 8007BD5C 00078CBC  93 C1 00 20 */	stw r30, 0x20(r1)
/* 8007BD60 00078CC0  3B C5 00 00 */	addi r30, r5, 0
/* 8007BD64 00078CC4  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 8007BD68 00078CC8  93 81 00 18 */	stw r28, 0x18(r1)
/* 8007BD6C 00078CCC  3B 84 00 00 */	addi r28, r4, 0
/* 8007BD70 00078CD0  4B FF EE B5 */	bl OSDisableInterrupts
/* 8007BD74 00078CD4  3B A3 00 00 */	addi r29, r3, 0
/* 8007BD78 00078CD8  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 8007BD7C 00078CDC  48 00 00 24 */	b lbl_8007BDA0
lbl_8007BD80:
/* 8007BD80 00078CE0  2C 1E 00 00 */	cmpwi r30, 0
/* 8007BD84 00078CE4  40 82 00 14 */	bne lbl_8007BD98
/* 8007BD88 00078CE8  7F A3 EB 78 */	mr r3, r29
/* 8007BD8C 00078CEC  4B FF EE C1 */	bl OSRestoreInterrupts
/* 8007BD90 00078CF0  38 60 00 00 */	li r3, 0
/* 8007BD94 00078CF4  48 00 00 70 */	b lbl_8007BE04
lbl_8007BD98:
/* 8007BD98 00078CF8  38 7F 00 08 */	addi r3, r31, 8
/* 8007BD9C 00078CFC  48 00 2E B9 */	bl OSSleepThread
lbl_8007BDA0:
/* 8007BDA0 00078D00  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 8007BDA4 00078D04  2C 00 00 00 */	cmpwi r0, 0
/* 8007BDA8 00078D08  41 82 FF D8 */	beq lbl_8007BD80
/* 8007BDAC 00078D0C  28 1C 00 00 */	cmplwi r28, 0
/* 8007BDB0 00078D10  41 82 00 18 */	beq lbl_8007BDC8
/* 8007BDB4 00078D14  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 8007BDB8 00078D18  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 8007BDBC 00078D1C  54 00 10 3A */	slwi r0, r0, 2
/* 8007BDC0 00078D20  7C 03 00 2E */	lwzx r0, r3, r0
/* 8007BDC4 00078D24  90 1C 00 00 */	stw r0, 0(r28)
lbl_8007BDC8:
/* 8007BDC8 00078D28  80 BF 00 18 */	lwz r5, 0x18(r31)
/* 8007BDCC 00078D2C  7F E3 FB 78 */	mr r3, r31
/* 8007BDD0 00078D30  80 9F 00 14 */	lwz r4, 0x14(r31)
/* 8007BDD4 00078D34  38 A5 00 01 */	addi r5, r5, 1
/* 8007BDD8 00078D38  7C 05 23 D6 */	divw r0, r5, r4
/* 8007BDDC 00078D3C  7C 00 21 D6 */	mullw r0, r0, r4
/* 8007BDE0 00078D40  7C 00 28 50 */	subf r0, r0, r5
/* 8007BDE4 00078D44  90 1F 00 18 */	stw r0, 0x18(r31)
/* 8007BDE8 00078D48  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 8007BDEC 00078D4C  38 04 FF FF */	addi r0, r4, -1
/* 8007BDF0 00078D50  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 8007BDF4 00078D54  48 00 2F 4D */	bl OSWakeupThread
/* 8007BDF8 00078D58  7F A3 EB 78 */	mr r3, r29
/* 8007BDFC 00078D5C  4B FF EE 51 */	bl OSRestoreInterrupts
/* 8007BE00 00078D60  38 60 00 01 */	li r3, 1
lbl_8007BE04:
/* 8007BE04 00078D64  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 8007BE08 00078D68  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 8007BE0C 00078D6C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 8007BE10 00078D70  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 8007BE14 00078D74  83 81 00 18 */	lwz r28, 0x18(r1)
/* 8007BE18 00078D78  38 21 00 28 */	addi r1, r1, 0x28
/* 8007BE1C 00078D7C  7C 08 03 A6 */	mtlr r0
/* 8007BE20 00078D80  4E 80 00 20 */	blr 

.global OSJamMessage
OSJamMessage:
/* 8007BE24 00078D84  7C 08 02 A6 */	mflr r0
/* 8007BE28 00078D88  90 01 00 04 */	stw r0, 4(r1)
/* 8007BE2C 00078D8C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 8007BE30 00078D90  93 E1 00 24 */	stw r31, 0x24(r1)
/* 8007BE34 00078D94  3B E3 00 00 */	addi r31, r3, 0
/* 8007BE38 00078D98  93 C1 00 20 */	stw r30, 0x20(r1)
/* 8007BE3C 00078D9C  3B C5 00 00 */	addi r30, r5, 0
/* 8007BE40 00078DA0  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 8007BE44 00078DA4  93 81 00 18 */	stw r28, 0x18(r1)
/* 8007BE48 00078DA8  3B 84 00 00 */	addi r28, r4, 0
/* 8007BE4C 00078DAC  4B FF ED D9 */	bl OSDisableInterrupts
/* 8007BE50 00078DB0  3B A3 00 00 */	addi r29, r3, 0
/* 8007BE54 00078DB4  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 8007BE58 00078DB8  48 00 00 24 */	b lbl_8007BE7C
lbl_8007BE5C:
/* 8007BE5C 00078DBC  2C 1E 00 00 */	cmpwi r30, 0
/* 8007BE60 00078DC0  40 82 00 14 */	bne lbl_8007BE74
/* 8007BE64 00078DC4  7F A3 EB 78 */	mr r3, r29
/* 8007BE68 00078DC8  4B FF ED E5 */	bl OSRestoreInterrupts
/* 8007BE6C 00078DCC  38 60 00 00 */	li r3, 0
/* 8007BE70 00078DD0  48 00 00 68 */	b lbl_8007BED8
lbl_8007BE74:
/* 8007BE74 00078DD4  7F E3 FB 78 */	mr r3, r31
/* 8007BE78 00078DD8  48 00 2D DD */	bl OSSleepThread
lbl_8007BE7C:
/* 8007BE7C 00078DDC  80 BF 00 14 */	lwz r5, 0x14(r31)
/* 8007BE80 00078DE0  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 8007BE84 00078DE4  7C 05 00 00 */	cmpw r5, r0
/* 8007BE88 00078DE8  40 81 FF D4 */	ble lbl_8007BE5C
/* 8007BE8C 00078DEC  80 9F 00 18 */	lwz r4, 0x18(r31)
/* 8007BE90 00078DF0  38 05 FF FF */	addi r0, r5, -1
/* 8007BE94 00078DF4  38 7F 00 08 */	addi r3, r31, 8
/* 8007BE98 00078DF8  7C 84 02 14 */	add r4, r4, r0
/* 8007BE9C 00078DFC  7C 04 2B D6 */	divw r0, r4, r5
/* 8007BEA0 00078E00  7C 00 29 D6 */	mullw r0, r0, r5
/* 8007BEA4 00078E04  7C 00 20 50 */	subf r0, r0, r4
/* 8007BEA8 00078E08  90 1F 00 18 */	stw r0, 0x18(r31)
/* 8007BEAC 00078E0C  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 8007BEB0 00078E10  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 8007BEB4 00078E14  54 00 10 3A */	slwi r0, r0, 2
/* 8007BEB8 00078E18  7F 84 01 2E */	stwx r28, r4, r0
/* 8007BEBC 00078E1C  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 8007BEC0 00078E20  38 04 00 01 */	addi r0, r4, 1
/* 8007BEC4 00078E24  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 8007BEC8 00078E28  48 00 2E 79 */	bl OSWakeupThread
/* 8007BECC 00078E2C  7F A3 EB 78 */	mr r3, r29
/* 8007BED0 00078E30  4B FF ED 7D */	bl OSRestoreInterrupts
/* 8007BED4 00078E34  38 60 00 01 */	li r3, 1
lbl_8007BED8:
/* 8007BED8 00078E38  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 8007BEDC 00078E3C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 8007BEE0 00078E40  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 8007BEE4 00078E44  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 8007BEE8 00078E48  83 81 00 18 */	lwz r28, 0x18(r1)
/* 8007BEEC 00078E4C  38 21 00 28 */	addi r1, r1, 0x28
/* 8007BEF0 00078E50  7C 08 03 A6 */	mtlr r0
/* 8007BEF4 00078E54  4E 80 00 20 */	blr 
