.include "macros.inc"

.section .text

.org 0x800A20EC

.global TRKDestructEvent
TRKDestructEvent:
/* 800A20EC 0009F04C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A20F0 0009F050  7C 08 02 A6 */	mflr r0
/* 800A20F4 0009F054  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A20F8 0009F058  80 63 00 08 */	lwz r3, 8(r3)
/* 800A20FC 0009F05C  48 00 0D D5 */	bl TRKReleaseBuffer
/* 800A2100 0009F060  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A2104 0009F064  7C 08 03 A6 */	mtlr r0
/* 800A2108 0009F068  38 21 00 10 */	addi r1, r1, 0x10
/* 800A210C 0009F06C  4E 80 00 20 */	blr 

.global TRKConstructEvent
TRKConstructEvent:
/* 800A2110 0009F070  98 83 00 00 */	stb r4, 0(r3)
/* 800A2114 0009F074  38 80 00 00 */	li r4, 0
/* 800A2118 0009F078  38 00 FF FF */	li r0, -1
/* 800A211C 0009F07C  90 83 00 04 */	stw r4, 4(r3)
/* 800A2120 0009F080  90 03 00 08 */	stw r0, 8(r3)
/* 800A2124 0009F084  4E 80 00 20 */	blr 

.global TRKPostEvent
TRKPostEvent:
/* 800A2128 0009F088  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800A212C 0009F08C  7C 08 02 A6 */	mflr r0
/* 800A2130 0009F090  3C 80 80 21 */	lis r4, gTRKEventQueue@ha
/* 800A2134 0009F094  90 01 00 24 */	stw r0, 0x24(r1)
/* 800A2138 0009F098  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800A213C 0009F09C  3B E0 00 00 */	li r31, 0
/* 800A2140 0009F0A0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800A2144 0009F0A4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800A2148 0009F0A8  7C 7D 1B 78 */	mr r29, r3
/* 800A214C 0009F0AC  38 64 95 C8 */	addi r3, r4, gTRKEventQueue@l
/* 800A2150 0009F0B0  48 00 45 69 */	bl TRKAcquireMutex
/* 800A2154 0009F0B4  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A2158 0009F0B8  3B C3 95 C8 */	addi r30, r3, gTRKEventQueue@l
/* 800A215C 0009F0BC  80 7E 00 04 */	lwz r3, 4(r30)
/* 800A2160 0009F0C0  2C 03 00 02 */	cmpwi r3, 2
/* 800A2164 0009F0C4  40 82 00 0C */	bne lbl_800A2170
/* 800A2168 0009F0C8  3B E0 01 00 */	li r31, 0x100
/* 800A216C 0009F0CC  48 00 00 70 */	b lbl_800A21DC
lbl_800A2170:
/* 800A2170 0009F0D0  80 1E 00 08 */	lwz r0, 8(r30)
/* 800A2174 0009F0D4  7F A4 EB 78 */	mr r4, r29
/* 800A2178 0009F0D8  38 A0 00 0C */	li r5, 0xc
/* 800A217C 0009F0DC  7C 00 1A 14 */	add r0, r0, r3
/* 800A2180 0009F0E0  54 03 0F FE */	srwi r3, r0, 0x1f
/* 800A2184 0009F0E4  54 00 07 FE */	clrlwi r0, r0, 0x1f
/* 800A2188 0009F0E8  7C 00 1A 78 */	xor r0, r0, r3
/* 800A218C 0009F0EC  7C 03 00 50 */	subf r0, r3, r0
/* 800A2190 0009F0F0  1F A0 00 0C */	mulli r29, r0, 0xc
/* 800A2194 0009F0F4  7C 7E EA 14 */	add r3, r30, r29
/* 800A2198 0009F0F8  38 63 00 0C */	addi r3, r3, 0xc
/* 800A219C 0009F0FC  4B F6 13 75 */	bl TRK_memcpy
/* 800A21A0 0009F100  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A21A4 0009F104  38 83 95 C8 */	addi r4, r3, gTRKEventQueue@l
/* 800A21A8 0009F108  80 04 00 24 */	lwz r0, 0x24(r4)
/* 800A21AC 0009F10C  7C 64 EA 14 */	add r3, r4, r29
/* 800A21B0 0009F110  90 03 00 10 */	stw r0, 0x10(r3)
/* 800A21B4 0009F114  80 64 00 24 */	lwz r3, 0x24(r4)
/* 800A21B8 0009F118  38 03 00 01 */	addi r0, r3, 1
/* 800A21BC 0009F11C  28 00 01 00 */	cmplwi r0, 0x100
/* 800A21C0 0009F120  90 04 00 24 */	stw r0, 0x24(r4)
/* 800A21C4 0009F124  40 80 00 0C */	bge lbl_800A21D0
/* 800A21C8 0009F128  38 00 01 00 */	li r0, 0x100
/* 800A21CC 0009F12C  90 04 00 24 */	stw r0, 0x24(r4)
lbl_800A21D0:
/* 800A21D0 0009F130  80 7E 00 04 */	lwz r3, 4(r30)
/* 800A21D4 0009F134  38 03 00 01 */	addi r0, r3, 1
/* 800A21D8 0009F138  90 1E 00 04 */	stw r0, 4(r30)
lbl_800A21DC:
/* 800A21DC 0009F13C  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A21E0 0009F140  38 63 95 C8 */	addi r3, r3, gTRKEventQueue@l
/* 800A21E4 0009F144  48 00 44 CD */	bl TRKReleaseMutex
/* 800A21E8 0009F148  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800A21EC 0009F14C  7F E3 FB 78 */	mr r3, r31
/* 800A21F0 0009F150  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800A21F4 0009F154  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800A21F8 0009F158  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800A21FC 0009F15C  7C 08 03 A6 */	mtlr r0
/* 800A2200 0009F160  38 21 00 20 */	addi r1, r1, 0x20
/* 800A2204 0009F164  4E 80 00 20 */	blr 

.global TRKGetNextEvent
TRKGetNextEvent:
/* 800A2208 0009F168  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800A220C 0009F16C  7C 08 02 A6 */	mflr r0
/* 800A2210 0009F170  3C 80 80 21 */	lis r4, gTRKEventQueue@ha
/* 800A2214 0009F174  90 01 00 24 */	stw r0, 0x24(r1)
/* 800A2218 0009F178  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800A221C 0009F17C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800A2220 0009F180  3B C0 00 00 */	li r30, 0
/* 800A2224 0009F184  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800A2228 0009F188  7C 7D 1B 78 */	mr r29, r3
/* 800A222C 0009F18C  38 64 95 C8 */	addi r3, r4, gTRKEventQueue@l
/* 800A2230 0009F190  48 00 44 89 */	bl TRKAcquireMutex
/* 800A2234 0009F194  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A2238 0009F198  3B E3 95 C8 */	addi r31, r3, gTRKEventQueue@l
/* 800A223C 0009F19C  80 1F 00 04 */	lwz r0, 4(r31)
/* 800A2240 0009F1A0  2C 00 00 00 */	cmpwi r0, 0
/* 800A2244 0009F1A4  40 81 00 4C */	ble lbl_800A2290
/* 800A2248 0009F1A8  80 1F 00 08 */	lwz r0, 8(r31)
/* 800A224C 0009F1AC  7F A3 EB 78 */	mr r3, r29
/* 800A2250 0009F1B0  38 A0 00 0C */	li r5, 0xc
/* 800A2254 0009F1B4  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800A2258 0009F1B8  7C 9F 02 14 */	add r4, r31, r0
/* 800A225C 0009F1BC  38 84 00 0C */	addi r4, r4, 0xc
/* 800A2260 0009F1C0  4B F6 12 B1 */	bl TRK_memcpy
/* 800A2264 0009F1C4  80 7F 00 08 */	lwz r3, 8(r31)
/* 800A2268 0009F1C8  80 9F 00 04 */	lwz r4, 4(r31)
/* 800A226C 0009F1CC  38 03 00 01 */	addi r0, r3, 1
/* 800A2270 0009F1D0  38 64 FF FF */	addi r3, r4, -1
/* 800A2274 0009F1D4  90 1F 00 08 */	stw r0, 8(r31)
/* 800A2278 0009F1D8  2C 00 00 02 */	cmpwi r0, 2
/* 800A227C 0009F1DC  90 7F 00 04 */	stw r3, 4(r31)
/* 800A2280 0009F1E0  40 82 00 0C */	bne lbl_800A228C
/* 800A2284 0009F1E4  38 00 00 00 */	li r0, 0
/* 800A2288 0009F1E8  90 1F 00 08 */	stw r0, 8(r31)
lbl_800A228C:
/* 800A228C 0009F1EC  3B C0 00 01 */	li r30, 1
lbl_800A2290:
/* 800A2290 0009F1F0  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A2294 0009F1F4  38 63 95 C8 */	addi r3, r3, gTRKEventQueue@l
/* 800A2298 0009F1F8  48 00 44 19 */	bl TRKReleaseMutex
/* 800A229C 0009F1FC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800A22A0 0009F200  7F C3 F3 78 */	mr r3, r30
/* 800A22A4 0009F204  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800A22A8 0009F208  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800A22AC 0009F20C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800A22B0 0009F210  7C 08 03 A6 */	mtlr r0
/* 800A22B4 0009F214  38 21 00 20 */	addi r1, r1, 0x20
/* 800A22B8 0009F218  4E 80 00 20 */	blr 

.global TRKInitializeEventQueue
TRKInitializeEventQueue:
/* 800A22BC 0009F21C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A22C0 0009F220  7C 08 02 A6 */	mflr r0
/* 800A22C4 0009F224  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A22C8 0009F228  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A22CC 0009F22C  38 63 95 C8 */	addi r3, r3, gTRKEventQueue@l
/* 800A22D0 0009F230  48 00 43 F1 */	bl TRKInitializeMutex
/* 800A22D4 0009F234  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A22D8 0009F238  38 63 95 C8 */	addi r3, r3, gTRKEventQueue@l
/* 800A22DC 0009F23C  48 00 43 DD */	bl TRKAcquireMutex
/* 800A22E0 0009F240  3C 60 80 21 */	lis r3, gTRKEventQueue@ha
/* 800A22E4 0009F244  38 80 00 00 */	li r4, 0
/* 800A22E8 0009F248  38 63 95 C8 */	addi r3, r3, gTRKEventQueue@l
/* 800A22EC 0009F24C  38 00 01 00 */	li r0, 0x100
/* 800A22F0 0009F250  90 83 00 04 */	stw r4, 4(r3)
/* 800A22F4 0009F254  90 83 00 08 */	stw r4, 8(r3)
/* 800A22F8 0009F258  90 03 00 24 */	stw r0, 0x24(r3)
/* 800A22FC 0009F25C  48 00 43 B5 */	bl TRKReleaseMutex
/* 800A2300 0009F260  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A2304 0009F264  38 60 00 00 */	li r3, 0
/* 800A2308 0009F268  7C 08 03 A6 */	mtlr r0
/* 800A230C 0009F26C  38 21 00 10 */	addi r1, r1, 0x10
/* 800A2310 0009F270  4E 80 00 20 */	blr 
